name: Integración Continua (CI) para EventHub
description: |
  Este flujo de trabajo de GitHub Actions configura un pipeline de Integración Continua (CI) para el proyecto EventHub.
  Incluye construcción del proyecto, pruebas unitarias e integración y pruebas End-to-End.

on:
  pull_request:
    branches: [ main ]
  release:
      types: [published]

env:
  PYTHON_VERSION: '3.12'

jobs:
# Inciso a: Construcción del proyecto
  build:
    name: Construccion y Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Crear archivo .env
      run: |
        echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DEBUG=False" >> .env
        echo "ALLOWED_HOSTS=localhost" >> .env
        echo "CSRF_TRUSTED_ORIGINS=http://localhost:8000" >> .env

    - name: Ejecutar pruebas de construcción
      run: python manage.py check

    - name: Linting
      run: ruff check

  # Inciso b: Pruebas unitarias e integración
  test-unit-and-integration:
    name: Pruebas Unitarias e Integración
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Crear archivo .env
      run: |
        echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DEBUG=False" >> .env
        echo "ALLOWED_HOSTS=localhost" >> .env
        echo "CSRF_TRUSTED_ORIGINS=http://localhost:8000" >> .env

    - name: Ejecutar pruebas unitarias
      run: python manage.py test app.test.test_unit
    
    - name: Ejecutar pruebas de integración
      run: python manage.py test app.test.test_integration

  # Inciso c: Pruebas End-to-End
  test-e2e:
    name: Pruebas E2E
    runs-on: ubuntu-latest
    needs: build 
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Crear archivo .env
      run: |
        echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DEBUG=False" >> .env
        echo "ALLOWED_HOSTS=localhost" >> .env
        echo "CSRF_TRUSTED_ORIGINS=http://localhost:8000" >> .env

    - name: Instalar playwright
      run: python -m playwright install

    - name: Ejecutar pruebas e2e
      run: python manage.py test app.test.test_e2e